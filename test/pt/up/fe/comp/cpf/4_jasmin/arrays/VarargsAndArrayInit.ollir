import io;

VarargsAndArrayInit{

   .construct VarargsAndArrayInit().V {
       invokespecial(this, "<init>").V;
   }

   .method public static main(args.array.String).V {
      tmp0.VarargsAndArrayInit :=.VarargsAndArrayInit new(VarargsAndArrayInit).VarargsAndArrayInit;
      invokespecial(tmp0.VarargsAndArrayInit, "<init>").V;
      a.VarargsAndArrayInit :=.VarargsAndArrayInit tmp0.VarargsAndArrayInit;
      tmp1.i32 :=.i32 invokevirtual(a.VarargsAndArrayInit, "bar").i32;
      invokestatic(io, "print", tmp1.i32).V;
      ret.V ;
   }

   .method foo(ar.array.i32, a.array.i32).i32 {
      tmp2.i32 :=.i32 arraylength(ar.array.i32).i32;
      tmp3.i32 :=.i32 arraylength(a.array.i32).i32;
      tmp4.i32 :=.i32 tmp2.i32 +.i32 tmp3.i32;
      ret.i32 tmp4.i32;
   }

   .method bar().i32 {
      tmp5.array.i32 :=.array.i32 new(array, 3.i32).array.i32;
      __varargs_array_0.array.i32 :=.array.i32 tmp5.array.i32;
      __varargs_array_0.array.i32[0.i32].i32 :=.i32 1.i32;
      __varargs_array_0.array.i32[1.i32].i32 :=.i32 2.i32;
      __varargs_array_0.array.i32[2.i32].i32 :=.i32 3.i32;
      tmp6.array.i32 :=.array.i32 new(array, 5.i32).array.i32;
      __varargs_array_1.array.i32 :=.array.i32 tmp6.array.i32;
      __varargs_array_1.array.i32[0.i32].i32 :=.i32 4.i32;
      __varargs_array_1.array.i32[1.i32].i32 :=.i32 5.i32;
      __varargs_array_1.array.i32[2.i32].i32 :=.i32 6.i32;
      __varargs_array_1.array.i32[3.i32].i32 :=.i32 7.i32;
      __varargs_array_1.array.i32[4.i32].i32 :=.i32 8.i32;
      res.i32 :=.i32 invokevirtual(this.VarargsAndArrayInit, "foo", __varargs_array_0.array.i32, __varargs_array_1.array.i32).i32;
      ret.i32 res.i32;
   }
}